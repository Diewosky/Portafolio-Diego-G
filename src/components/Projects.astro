---
const projects = [
  {
    title: "Sistema de Apoyo a las Inspecciones de Máquinas – Indama",
    summary: "Sistema completo desarrollado para la empresa Indama con el objetivo de digitalizar y facilitar el proceso de inspección de maquinaria industrial. Este proyecto fue mi trabajo de titulación, realizado de forma completamente individual, cubriendo todas las etapas del ciclo de vida del software, desde la planificación hasta el despliegue.",
    description: "La solución está compuesta por: Una app móvil Android desarrollada en Kotlin con Jetpack Compose, para registrar inspecciones directamente en terreno. Una plataforma web en React + Vite que permite visualizar, gestionar y consultar registros, con filtros, paneles de resumen e historial. Un backend hecho en Node.js y Express.js, encargado de la lógica. Una base de datos en Firebase, utilizada para almacenar registros, formularios y usuarios, etc de forma segura. Autenticación mediante Google Sign-In implementada tanto en la web como en la app móvil. Despliegue en Azure, con infraestructura cloud pensada para garantizar disponibilidad y escalabilidad.",
    images: [
      { src: `${import.meta.env.BASE_URL}/img/projects/1InicioWeb.png`, alt: "Pantalla de inicio de la aplicación web" },
      { src: `${import.meta.env.BASE_URL}/img/projects/2GoogleSignInWeb.png`, alt: "Google Sign-In en la versión web" },
      { src: `${import.meta.env.BASE_URL}/img/projects/3pantallaInicio.png`, alt: "Panel principal con estadísticas" },
      { src: `${import.meta.env.BASE_URL}/img/projects/4InspeccionesPorDi\u0301a.png`, alt: "Gráfico de inspecciones por día" },
      { src: `${import.meta.env.BASE_URL}/img/projects/5filtroInspeccionesPorFecha.png`, alt: "Filtro de inspecciones por fecha" },
      { src: `${import.meta.env.BASE_URL}/img/projects/6ResultadoInspeccionesPorFecha.png`, alt: "Resultados filtrados por fecha" },
      { src: `${import.meta.env.BASE_URL}/img/projects/7GestionFormularios.png`, alt: "Pantalla de gestión de formularios" },
      { src: `${import.meta.env.BASE_URL}/img/projects/8CrearFormulario.png`, alt: "Creación de nuevo formulario" },
      { src: `${import.meta.env.BASE_URL}/img/projects/9TipoDePreguntas.png`, alt: "Tipos de preguntas disponibles" },
      { src: `${import.meta.env.BASE_URL}/img/projects/10CreacionPreguntaMatriz.png`, alt: "Creación de pregunta tipo matriz" },
      { src: `${import.meta.env.BASE_URL}/img/projects/11Pestan\u0303aRespuestas.png`, alt: "Pestaña de respuestas" },
      { src: `${import.meta.env.BASE_URL}/img/projects/12FormularioRespondido1.png`, alt: "Formulario respondido - parte 1" },
      { src: `${import.meta.env.BASE_URL}/img/projects/13FormularioRespondido2.png`, alt: "Formulario respondido - parte 2" },
      { src: `${import.meta.env.BASE_URL}/img/projects/14QuienRespondioFormulario.png`, alt: "Información de quien respondió" },
      { src: `${import.meta.env.BASE_URL}/img/projects/15FiltroYBusqueda.png`, alt: "Filtros y búsqueda" },
      { src: `${import.meta.env.BASE_URL}/img/projects/16IconoApp.png`, alt: "Icono de la aplicación móvil" },
      { src: `${import.meta.env.BASE_URL}/img/projects/17EntrandoApp.png`, alt: "Pantalla de carga de la app" },
      { src: `${import.meta.env.BASE_URL}/img/projects/18PantallaInicioApp.png`, alt: "Pantalla de inicio de la app móvil" },
      { src: `${import.meta.env.BASE_URL}/img/projects/19GoogleSignInApp.png`, alt: "Google Sign-In en la app móvil" },
      { src: `${import.meta.env.BASE_URL}/img/projects/20HomeApp.png`, alt: "Pantalla principal de la app móvil" },
      { src: `${import.meta.env.BASE_URL}/img/projects/21TipoFormularioApp.png`, alt: "Selección de tipo de formulario" },
      { src: `${import.meta.env.BASE_URL}/img/projects/22ResponderFormularioAPP1.png`, alt: "Responder formulario - parte 1" },
      { src: `${import.meta.env.BASE_URL}/img/projects/23ResponderFormApp2.png`, alt: "Responder formulario - parte 2" },
      { src: `${import.meta.env.BASE_URL}/img/projects/24ResponderApp3.png`, alt: "Responder formulario - parte 3" },
      { src: `${import.meta.env.BASE_URL}/img/projects/25ResponderApp4.png`, alt: "Responder formulario - parte 4" },
      { src: `${import.meta.env.BASE_URL}/img/projects/26ConfirmacionRespondidoApp.png`, alt: "Confirmación de formulario enviado" },
      { src: `${import.meta.env.BASE_URL}/img/projects/27RespuestasApp.png`, alt: "Visualización de respuestas en la app" },
      { src: `${import.meta.env.BASE_URL}/img/projects/28vistaTablet.png`, alt: "Vista de la aplicación en tablet" }
    ],
    tags: ["Proyecto de Tesis", "Fullstack", "React", "Node.js", "Kotlin", "Firebase", "Azure", "Google Sign-In", "Proyecto Individual"],
    github: "#",
    demo: "#",
    featured: true
  }
];
---

<section id="projects" class="py-20 bg-white dark:bg-gray-900">
  <div class="container mx-auto px-4 md:px-6">
    <h2 class="text-3xl md:text-4xl font-bold mb-12 text-center">
      <span class="text-emerald-600 dark:text-emerald-400">&lt;</span>
      <span class="text-gray-800 dark:text-gray-100">Proyectos</span>
      <span class="text-emerald-600 dark:text-emerald-400">/&gt;</span>
    </h2>
    
    {projects.filter(p => p.featured).map(project => (
      <div class="mb-12 bg-gray-50 dark:bg-gray-800 rounded-lg overflow-hidden border-2 border-emerald-500 dark:border-emerald-400 shadow-lg transition-transform hover:-translate-y-1 hover:shadow-xl">
        <div class="relative h-[400px] overflow-hidden bg-gray-200 dark:bg-gray-700">
          <!-- Carrusel de imágenes -->
          <div class="carousel-container w-full h-full relative">
            {project.images.map((image, index) => (
              <div class={`carousel-slide absolute inset-0 transition-opacity duration-500 ${index === 0 ? 'opacity-100' : 'opacity-0'}`} data-index={index}>
                <img src={image.src} alt={image.alt} class="w-full h-full object-contain" />
              </div>
            ))}
            
            <!-- Controles del carrusel -->
            <button class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/70 dark:bg-gray-800/70 rounded-full p-2 carousel-prev z-10">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800 dark:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
            </button>
            <button class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/70 dark:bg-gray-800/70 rounded-full p-2 carousel-next z-10">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800 dark:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
            
            <!-- Indicadores de posición -->
            <div class="absolute bottom-4 left-0 right-0 flex justify-center space-x-2">
              {project.images.map((_, index) => (
                <button class={`h-2 w-2 rounded-full transition-colors duration-300 carousel-indicator ${index === 0 ? 'bg-emerald-500' : 'bg-gray-300 dark:bg-gray-600'}`} data-index={index}></button>
              ))}
            </div>
            
            <!-- Etiquetas destacadas -->
            <div class="absolute top-4 right-4 flex flex-col gap-2 z-10">
              <div class="bg-emerald-600 text-white px-3 py-1 rounded-full text-sm font-bold shadow-md">
                Proyecto Destacado
              </div>
              <div class="bg-purple-600 text-white px-3 py-1 rounded-full text-sm font-bold shadow-md">
                Proyecto de Tesis
              </div>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100 mb-3">{project.title}</h3>
          
          <!-- Resumen inicial -->
          <p class="text-gray-600 dark:text-gray-400 mb-4">{project.summary}</p>
          
          <!-- Detalles que se muestran/ocultan -->
          <div class="mb-4 details-content hidden" id="project-details">
            <p class="text-gray-600 dark:text-gray-400 mb-4">{project.description}</p>
          </div>
          
          <!-- Botón para mostrar/ocultar -->
          <button id="toggle-details" class="mb-6 text-emerald-600 dark:text-emerald-400 hover:text-emerald-800 dark:hover:text-emerald-300 flex items-center font-medium">
            <span class="show-more-text">Ver más información</span>
            <span class="show-less-text hidden">Ver menos información</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1 chevron-down" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1 chevron-up hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
            </svg>
          </button>
          
          <div class="flex flex-wrap gap-2 mb-6">
            {project.tags.map(tag => (
              <span class="text-xs font-medium bg-emerald-100 dark:bg-emerald-900/40 text-emerald-800 dark:text-emerald-300 px-2 py-1 rounded">
                {tag}
              </span>
            ))}
          </div>
          
          <div class="flex space-x-4">
            <a href={project.github} class="text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors duration-200 flex items-center">
              <svg class="h-5 w-5 mr-1" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"></path>
              </svg>
              Código
            </a>
            <a href={project.demo} class="text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors duration-200 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
              </svg>
              Demo
            </a>
          </div>
        </div>
      </div>
    ))}
    
  </div>
</section> 

<script>
  // Función para alternar la visibilidad de los detalles
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButton = document.getElementById('toggle-details');
    const detailsContent = document.getElementById('project-details');
    const showMoreText = document.querySelector('.show-more-text');
    const showLessText = document.querySelector('.show-less-text');
    const chevronDown = document.querySelector('.chevron-down');
    const chevronUp = document.querySelector('.chevron-up');
    
    if (toggleButton && detailsContent) {
      toggleButton.addEventListener('click', () => {
        detailsContent.classList.toggle('hidden');
        showMoreText.classList.toggle('hidden');
        showLessText.classList.toggle('hidden');
        chevronDown.classList.toggle('hidden');
        chevronUp.classList.toggle('hidden');
      });
    }
    
    // Carrusel de imágenes
    const setupCarousel = () => {
      const slides = document.querySelectorAll('.carousel-slide');
      const indicators = document.querySelectorAll('.carousel-indicator');
      const prevBtn = document.querySelector('.carousel-prev');
      const nextBtn = document.querySelector('.carousel-next');
      let currentIndex = 0;
      
      if (!slides.length) return;
      
      const showSlide = (index) => {
        // Ocultar todas las diapositivas
        slides.forEach(slide => {
          slide.classList.add('opacity-0');
          slide.classList.remove('opacity-100');
        });
        
        // Mostrar la diapositiva actual
        slides[index].classList.remove('opacity-0');
        slides[index].classList.add('opacity-100');
        
        // Actualizar indicadores
        indicators.forEach((indicator, i) => {
          if (i === index) {
            indicator.classList.add('bg-emerald-500');
            indicator.classList.remove('bg-gray-300', 'dark:bg-gray-600');
          } else {
            indicator.classList.remove('bg-emerald-500');
            indicator.classList.add('bg-gray-300', 'dark:bg-gray-600');
          }
        });
        
        currentIndex = index;
      };
      
      // Configurar botones de navegación
      if (prevBtn) {
        prevBtn.addEventListener('click', () => {
          const newIndex = (currentIndex - 1 + slides.length) % slides.length;
          showSlide(newIndex);
        });
      }
      
      if (nextBtn) {
        nextBtn.addEventListener('click', () => {
          const newIndex = (currentIndex + 1) % slides.length;
          showSlide(newIndex);
        });
      }
      
      // Configurar indicadores
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
          showSlide(index);
        });
      });
      
      // Auto-reproducción (opcional)
      let interval = setInterval(() => {
        const newIndex = (currentIndex + 1) % slides.length;
        showSlide(newIndex);
      }, 5000);
      
      // Detener auto-reproducción al interactuar
      const container = document.querySelector('.carousel-container');
      if (container) {
        container.addEventListener('mouseenter', () => {
          clearInterval(interval);
        });
        
        container.addEventListener('mouseleave', () => {
          interval = setInterval(() => {
            const newIndex = (currentIndex + 1) % slides.length;
            showSlide(newIndex);
          }, 5000);
        });
      }
    };
    
    setupCarousel();
  });
</script> 