---
const navItems = [
  { label: "Inicio", url: "#home" },
  { label: "Sobre mí", url: "#about" },
  { label: "Tecnologías", url: "#skills" },
  { label: "Experiencia", url: "#experience" },
  { label: "Proyectos", url: "#projects" },
  { label: "Formación", url: "#education" }
];
---

<nav class="fixed w-full bg-white/10 dark:bg-black/20 backdrop-blur-md z-40 border-b border-gray-200 dark:border-gray-800">
  <div class="container mx-auto px-4 md:px-6 py-3">
    <div class="flex items-center justify-between">
      <a href="#" class="text-xl font-bold text-emerald-600 dark:text-emerald-400 tracking-tight">
        <span class="text-gray-700 dark:text-gray-300">&lt;</span>
        <span class="text-emerald-600 dark:text-emerald-400">Portafolio de Diego</span>
        <span class="text-gray-700 dark:text-gray-300">/&gt;</span>
      </a>
      
      <!-- Mobile menu button -->
      <div class="flex md:hidden items-center space-x-2">
        <button id="themeToggle-mobile" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 shadow-sm hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors duration-200 flex items-center justify-center w-8 h-8 border border-gray-300 dark:border-gray-600">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 sun hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 moon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
        </button>
        <button id="menu-toggle" class="text-gray-700 dark:text-gray-200 focus:outline-none">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
      
      <!-- Desktop menu -->
      <div class="hidden md:flex items-center space-x-6">
        {navItems.map(item => (
          <a 
            href={item.url} 
            class="text-gray-700 dark:text-gray-200 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors duration-200"
          >
            {item.label}
          </a>
        ))}
        
        <!-- Theme toggle button -->
        <button id="themeToggle" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 shadow-sm hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors duration-200 flex items-center justify-center w-8 h-8 border border-gray-300 dark:border-gray-600">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 sun hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 moon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden md:hidden">
    <div class="px-2 pt-2 pb-4 space-y-1 border-t border-gray-200 dark:border-gray-800 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md">
      {navItems.map(item => (
        <a
          href={item.url}
          class="block px-3 py-2 text-gray-700 dark:text-gray-200 hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors duration-200"
        >
          {item.label}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  // Toggle mobile menu
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
    
    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    });
  }

  // Tema oscuro/claro
  const themeToggleDesktop = document.querySelector('#themeToggle');
  const themeToggleMobile = document.querySelector('#themeToggle-mobile');
  const sunIcons = document.querySelectorAll('.sun');
  const moonIcons = document.querySelectorAll('.moon');
  
  // Forzar modo oscuro por defecto, a menos que explícitamente se haya guardado el modo claro
  if (localStorage.getItem('theme') === 'light') {
    document.documentElement.classList.remove('dark');
    sunIcons.forEach(icon => icon.classList.remove('hidden'));
    moonIcons.forEach(icon => icon.classList.add('hidden'));
  } else {
    // Siempre iniciar en modo oscuro por defecto
    document.documentElement.classList.add('dark');
    localStorage.setItem('theme', 'dark');
    moonIcons.forEach(icon => icon.classList.remove('hidden'));
    sunIcons.forEach(icon => icon.classList.add('hidden'));
  }

  // Función para cambiar el tema
  function toggleTheme() {
    document.documentElement.classList.toggle('dark');
    
    if (document.documentElement.classList.contains('dark')) {
      localStorage.setItem('theme', 'dark');
      moonIcons.forEach(icon => icon.classList.remove('hidden'));
      sunIcons.forEach(icon => icon.classList.add('hidden'));
    } else {
      localStorage.setItem('theme', 'light');
      sunIcons.forEach(icon => icon.classList.remove('hidden'));
      moonIcons.forEach(icon => icon.classList.add('hidden'));
    }
  }

  // Cambiar tema al hacer clic en cualquiera de los botones
  if (themeToggleDesktop) themeToggleDesktop.addEventListener('click', toggleTheme);
  if (themeToggleMobile) themeToggleMobile.addEventListener('click', toggleTheme);
</script> 